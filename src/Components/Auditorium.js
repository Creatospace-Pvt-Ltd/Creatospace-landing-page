/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Adam Bajgar (https://sketchfab.com/adam.bajgar)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/lowpoly-modern-auditorium-classroom-83418d6d74214aa4ad3ef716c9f959e3
title: LowPoly Modern Auditorium Classroom
*/

import React, { useRef, useState } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { DoubleSide, Vector3 } from "three";

export function Auditorium({ stage, ...props }) {
  // const [stage, setStage] = useState(2);
  const audiRef = useRef();
  const { nodes, materials } = useGLTF("auditorium-transformed.glb");
  const { camera } = useThree();
  const lookAtLerp3 = new Vector3(0, 0, 0);
  const lookAtLerp2 = new Vector3(0, 0, 0);
  useFrame(() => {
    if (audiRef.current) {
      if (stage == 1) {
        const pos = new Vector3(10, 5, 10);
        camera.position.lerp(pos, 0.01);
      }
    }
    if (stage == 2) {
      const pos = new Vector3(-8, 2, 2);
      camera.position.lerp(pos, 0.01);
      const lookAt = lookAtLerp3.lerp(new Vector3(-20, 0, -14), 0.6);
      camera.lookAt(lookAt);
    }
    if (stage == 3) {
      const pos = new Vector3(7, 2, 2);
      camera.position.lerp(pos, 0.01);
      const lookAt = lookAtLerp2.lerp(new Vector3(20, 0, 4), 0.6);
      camera.lookAt(lookAt);
    }
  });
  const map = useTexture("BillboardTexture.jpg");
  return (
    <group
      {...props}
      dispose={null}
      ref={audiRef}
      // onPointerDown={() => {
      //   setStage(0);
      // }}
      // onPointerUp={() => {
      //   setStage(2);
      // }}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_4.geometry} material={materials.Base} />
          <mesh geometry={nodes.Object_5.geometry} material={materials.Base} />
          <mesh geometry={nodes.Object_6.geometry} material={materials.Base} />
          <mesh
            geometry={nodes.Object_7.geometry}
            material={materials.EmmWhite}
          />
          <mesh geometry={nodes.Object_8.geometry} material={materials.Base} />
          <mesh position={[-10.99, 1.5, 0]} rotation={[0, Math.PI / 2, 0]}>
            <planeGeometry args={[2, 3.2]} />
            <meshBasicMaterial color={"red"} side={DoubleSide} map={map} />
          </mesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/auditorium-transformed.glb");
